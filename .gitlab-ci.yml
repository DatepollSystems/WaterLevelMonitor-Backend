stages:
  - test
  - build
  - push docker image

test:
  stage: test
  tags:
    - shell
  before_script:
    - rm -rf ./src/main/resources/application.properties
    - cp ./src/main/resources/application.properties.ci-test ./src/main/resources/application.properties
  script:
    - pwd
    - ls -al
    - ./gradle clean test



build:
  stage: build
  tags:
    - shell
  only:
    - tags
  before_script:
    - rm -rf ./src/main/resources/application.properties
    - cp ./src/main/resources/application.properties.ci-build ./src/main/resources/application.properties
  script:
    - gradle build -x test
  artifacts:
    paths:
      - build/libs/*.jar

deploy:
  stage: push docker image
  tags:
    - shell
  only:
    - tags
  script:
    - docker info
    - docker login -u $DOCKER_USER -p $DOCKER_PASSWORD docker.io
    - docker build -t datepollsystems/water-level-monitor-backend:latest .
    - docker push datepollsystems/water-level-monitor-backend:latest
    - docker build -t datepollsystems/water-level-monitor-backend:$CI_COMMIT_TAG .
    - docker push datepollsystems/water-level-monitor-backend:$CI_COMMIT_TAG
    - echo $CI_COMMIT_TAG

# Add server ssh docker refresh here


